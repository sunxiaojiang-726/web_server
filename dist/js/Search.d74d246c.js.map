{"version":3,"file":"js/Search.d74d246c.js","mappings":"oJAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,YAAY,iBAAiB,CAACF,EAAG,WAAW,CAACE,YAAY,SAASC,MAAM,CAAC,KAAO,aAAa,MAAQ,QAAQ,KAAO,WAAWC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOT,EAAIU,QAAQC,WAAWP,EAAG,aAAa,CAACQ,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,WAAWP,MAAM,CAAC,YAAc,WAAW,WAAa,OAAO,MAAQ,SAASC,GAAG,CAAC,MAAQR,EAAIe,QAAQ,OAASf,EAAIgB,UAAUC,MAAM,CAACC,MAAOlB,EAAM,GAAEmB,SAAS,SAAUC,GAAMpB,EAAIqB,GAAmB,kBAARD,EAAkBA,EAAIE,OAAQF,GAAMG,WAAW,SAAS,GAAsB,IAAlBvB,EAAIqB,GAAGG,OAAcpB,EAAG,MAAM,CAACE,YAAY,aAAaN,EAAIyB,GAAIzB,EAAe,aAAE,SAAS0B,EAAIC,GAAO,OAAOvB,EAAG,MAAM,CAACwB,IAAID,EAAMrB,YAAY,YAAYuB,SAAS,CAAC,UAAY7B,EAAI8B,GAAG9B,EAAI+B,QAAQL,EAAK1B,EAAIqB,MAAMb,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOT,EAAIgC,eAAeN,UAAW,GAAGtB,EAAG,MAAM,CAACE,YAAY,kBAAkB,CAACF,EAAG,WAAW,CAACG,MAAM,CAAC,MAAQ,QAAQ0B,YAAYjC,EAAIkC,GAAG,CAAC,CAACN,IAAI,aAAaO,GAAG,WAAW,MAAO,CAAC/B,EAAG,WAAW,CAACE,YAAY,cAAcC,MAAM,CAAC,KAAO,UAAUC,GAAG,CAAC,MAAQR,EAAIoC,aAAaC,OAAM,OAAUjC,EAAG,MAAM,CAACE,YAAY,gBAAgBN,EAAIyB,GAAIzB,EAAW,SAAE,SAAS0B,EAAIC,GAAO,OAAOvB,EAAG,OAAO,CAACwB,IAAID,EAAMrB,YAAY,eAAeE,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOT,EAAIsC,eAAeZ,MAAQ,CAAC1B,EAAIuC,GAAGvC,EAAI8B,GAAGJ,SAAU,IAAI,MACr0Cc,EAAkB,G,oBCmEtB,GACA3B,KAAAA,SACA4B,OACA,OACApB,GAAAA,GACAqB,MAAAA,KACAC,YAAAA,GACAC,QAAAA,KAAAA,OAAAA,EAAAA,EAAAA,IAAAA,aAAAA,KAGAC,QAAAA,CAEA9B,UACA+B,aAAAA,KAAAA,OACA,mBAEA,oBAGA,iCACA,uBAAAC,SAAAA,KAAAA,KACAC,QAAAA,IAAAA,EAAAA,QACA,uCACA,MAIAjB,QAAAA,EAAAA,GASA,2BAIA,uBAEA,0CAIAkB,OAAAA,GAEAC,YAAAA,KACA,mBAAAC,KAAAA,kBAAAA,QACA,IAGAnC,WAEA,mBACA,2BACA,uBAIAgB,eAAAA,GACA,qBAEA,gBAGAM,eAAAA,GACA,gBAGAF,UACA,kBAIAgB,MAAAA,CAEAR,QAAAA,CAEAS,MAAAA,EACAC,UAOA,8BAEA,iBAGAC,EAAAA,EAAAA,IAAAA,UAAAA,KAAAA,UAAAA,QCjK0Q,I,UCQtQC,GAAY,OACd,EACAzD,EACAyC,GACA,EACA,KACA,WACA,MAIF,EAAegB,EAAiB,S,8ECfzB,MAAMD,EAAa,CAAC3B,EAAKV,KAC9BuC,aAAaC,QAAQ9B,EAAKV,IAGfyC,EAAc/B,GAElB6B,aAAaG,QAAQhC","sources":["webpack://hmtt/./src/views/Serach/index.vue?3290","webpack://hmtt/src/views/Serach/index.vue","webpack://hmtt/./src/views/Serach/index.vue?6ee9","webpack://hmtt/./src/views/Serach/index.vue","webpack://hmtt/./src/utils/storage.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"search-header\"},[_c('van-icon',{staticClass:\"goback\",attrs:{\"name\":\"arrow-left\",\"color\":\"green\",\"size\":\"0.48rem\"},on:{\"click\":function($event){return _vm.$router.back()}}}),_c('van-search',{directives:[{name:\"fofo\",rawName:\"v-fofo\"}],attrs:{\"placeholder\":\"请输入搜索关键词\",\"background\":\"pink\",\"shape\":\"round\"},on:{\"input\":_vm.inputFn,\"search\":_vm.searchFn},model:{value:(_vm.kw),callback:function ($$v) {_vm.kw=(typeof $$v === 'string'? $$v.trim(): $$v)},expression:\"kw\"}})],1),(_vm.kw.length !== 0)?_c('div',{staticClass:\"sugg-list\"},_vm._l((_vm.suggestList),function(str,index){return _c('div',{key:index,staticClass:\"sugg-item\",domProps:{\"innerHTML\":_vm._s(_vm.lightFn(str, _vm.kw))},on:{\"click\":function($event){return _vm.suggestClickFn(str)}}})}),0):_c('div',{staticClass:\"search-history\"},[_c('van-cell',{attrs:{\"title\":\"搜索历史\"},scopedSlots:_vm._u([{key:\"right-icon\",fn:function(){return [_c('van-icon',{staticClass:\"search-icon\",attrs:{\"name\":\"delete\"},on:{\"click\":_vm.clearFn}})]},proxy:true}])}),_c('div',{staticClass:\"history-list\"},_vm._l((_vm.history),function(str,index){return _c('span',{key:index,staticClass:\"history-item\",on:{\"click\":function($event){return _vm.historyClickFn(str)}}},[_vm._v(_vm._s(str))])}),0)],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <!-- 搜索页面头部 -->\r\n    <div class=\"search-header\">\r\n      <!-- 后退按钮 -->\r\n      <van-icon\r\n        name=\"arrow-left\"\r\n        color=\"green\"\r\n        size=\"0.48rem\"\r\n        class=\"goback\"\r\n        @click=\"$router.back()\"\r\n      />\r\n      <!-- 搜索组件 -->\r\n      <van-search\r\n        v-model.trim=\"kw\"\r\n        v-fofo\r\n        placeholder=\"请输入搜索关键词\"\r\n        background=\"pink\"\r\n        shape=\"round\"\r\n        @input=\"inputFn\"\r\n        @search=\"searchFn\"\r\n      />\r\n    </div>\r\n\r\n    <!-- v-if-else控制 搜索建议列表 和 搜索历史 不能同时出现 -->\r\n    <!-- 搜索建议列表 -->\r\n    <div class=\"sugg-list\" v-if=\"kw.length !== 0\">\r\n      <div\r\n        class=\"sugg-item\"\r\n        v-for=\"(str, index) in suggestList\"\r\n        :key=\"index\"\r\n        v-html=\"lightFn(str, kw)\"\r\n        @click=\"suggestClickFn(str)\"\r\n      ></div>\r\n    </div>\r\n\r\n    <!-- 搜索历史 -->\r\n    <div class=\"search-history\" v-else>\r\n      <!-- 标题 -->\r\n      <van-cell title=\"搜索历史\">\r\n        <!-- 使用 right-icon 插槽来自定义右侧图标 -->\r\n        <template #right-icon>\r\n          <van-icon name=\"delete\" class=\"search-icon\" @click=\"clearFn\" />\r\n        </template>\r\n      </van-cell>\r\n      <!-- 历史列表 -->\r\n      <div class=\"history-list\">\r\n        <span\r\n          class=\"history-item\"\r\n          v-for=\"(str, index) in history\"\r\n          :key=\"index\"\r\n          @click=\"historyClickFn(str)\"\r\n          >{{ str }}</span\r\n        >\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 目标1: 跳转到搜索结果页面\r\n// 1. 输入框回车 -> 把输入框字 -> 搜索结果页\r\n// 2. 点击联想菜单 -> 点击文字 -> 搜索结果页\r\n// 3. 点击历史记录 -> 点击文字 -> 搜索结果页\r\n\r\n// 目标2: 输入框按回车,保存搜索词值; 点联想菜单的项,保存菜单项值\r\nimport { suggestListAPI } from '@/api/index.js'\r\nimport { setStorage, getStorage } from '@/utils/storage.js'\r\nexport default {\r\n  name: 'Search',\r\n  data() {\r\n    return {\r\n      kw: '', // 搜索关键字\r\n      timer: null, // 防抖的定时器\r\n      suggestList: [], // 联想建议列表文字数组\r\n      history: JSON.parse(getStorage('history')) || [] // 搜索历史\r\n    }\r\n  },\r\n  methods: {\r\n    // 输入框 - 内容实时改变触发的事件\r\n    inputFn() {\r\n      clearTimeout(this.timer)\r\n      if (this.kw.length === 0) {\r\n        // 如果输入框没有值,则清空搜索建议列表\r\n        this.suggestList = []\r\n      } else {\r\n        // 防抖: 延时执行逻辑代码,事件再次触发时,清除上一个定时器\r\n        this.timer = setTimeout(async () => {\r\n          const res = await suggestListAPI({ keywords: this.kw })\r\n          console.log(res, '联想菜单')\r\n          this.suggestList = res.data.data.options\r\n        }, 300)\r\n      }\r\n    },\r\n    // 专门处理字符串高亮关键字\r\n    lightFn(originStr, target) {\r\n      // originStr 原来的字符串\r\n      // target 关键字\r\n      // 字符串.replace() 该方法默认只替换了第一个出现的target\r\n      // 字符串.replaceAll() 该方法替换字符串中所有的target\r\n      // 返回值:替换后的完整字符串\r\n\r\n      // 如果你要使用变量, 作为正则的匹配条件, 不能用语法糖简化写法\r\n      // i代表的忽略大小写,g代表全局都匹配(即输入java,所有的Java,JAVA联想菜单无论大小写都高亮)\r\n      const reg = new RegExp(target, 'ig')\r\n\r\n      // 替换后的值不能用target\r\n      // 例如:输入框里 java, 匹配回来的联想菜单JAVA,Java,jAVA都被你replace换成输入框target值java\r\n      return originStr.replace(reg, (match) => {\r\n        // match就是匹配中的时候,原字符串里的那个字符,用人家原来的,我们给个颜色即可\r\n        return `<span style=\"color:red;\">${match}</span>`\r\n      })\r\n    },\r\n    // 封装 搜索跳转 方法\r\n    moveFn(theKw) {\r\n      // 坑: 路由跳转,在watch之前执行(watch侦听器中中还没有把history存到本地,就已经跳走了),所以我们要让定时器包裹路由跳转,根据eventLoop可知,先会执行监听器\r\n      setTimeout(() => {\r\n        this.$router.push({ path: `/search_result/${theKw}` })\r\n      }, 0)\r\n    },\r\n    // 输入框 - 搜索事件\r\n    searchFn() {\r\n      // 搜索关键字 --- 保存到数组里\r\n      if (this.kw.length > 0) {\r\n        this.history.push(this.kw)\r\n        this.moveFn(this.kw)\r\n      }\r\n    },\r\n    // 联想菜单 - 点击事件\r\n    suggestClickFn(str) {\r\n      this.history.push(str)\r\n\r\n      this.moveFn(str)\r\n    },\r\n    // 历史记录 - 点击事件\r\n    historyClickFn(str) {\r\n      this.moveFn(str)\r\n    },\r\n    // 清空搜索历史\r\n    clearFn() {\r\n      this.history = []\r\n    }\r\n  },\r\n  // watch侦听器使用\r\n  watch: {\r\n    // 历史记录数组的变化\r\n    history: {\r\n      // 数组不能直接监听到里边元素的变化,需要开启深度监听\r\n      deep: true,\r\n      handler() {\r\n        // 立刻覆盖式地保存到本地\r\n        // 保存到本地之前,给数组去重\r\n        // ES6新增了2种引用类型(以前Array,Object),(新增:Set Map)\r\n        // Set: 无序不重复的value集合体(无下角标)\r\n        // 特点: 你传入的数据类型,如果有重复元素,会自动清理掉重复元素,返回无重复Set对象\r\n        // 注意：如果数组中的值是对象，比较的是对象的内存地址\r\n        const theSet = new Set(this.history)\r\n        // Set类型 -> 转回 -> 数组类型\r\n        const arr = Array.from(theSet)\r\n\r\n        // 因为浏览器本地只能存字符串,不能直接存数组\r\n        setStorage('history', JSON.stringify(arr))\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n// 搜索头部样式\r\n.search-header {\r\n  height: 46px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: pink;\r\n  overflow: hidden;\r\n  /*后退按钮*/\r\n  .goback {\r\n    padding-left: 14px;\r\n  }\r\n  /*搜索组件*/\r\n  .van-search {\r\n    flex: 1;\r\n  }\r\n}\r\n\r\n/*搜索建议列表样式 */\r\n.sugg-list {\r\n  .sugg-item {\r\n    padding: 0 15px;\r\n    border-bottom: 1px solid #f8f8f8;\r\n    font-size: 14px;\r\n    line-height: 50px;\r\n    // 实现省略号的三行代码\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n}\r\n\r\n/**搜索历史样式 */\r\n.search-icon {\r\n  font-size: 16px;\r\n  line-height: inherit;\r\n}\r\n.history-list {\r\n  padding: 0 10px;\r\n  .history-item {\r\n    display: inline-block;\r\n    font-size: 12px;\r\n    padding: 8px 14px;\r\n    background-color: #efefef;\r\n    margin: 10px 8px 0px 8px;\r\n    border-radius: 10px;\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=23e599cc&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=23e599cc&scoped=true&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"23e599cc\",\n  null\n  \n)\n\nexport default component.exports","// 封装本地存储的方式\r\n// 整个项目使用localStorage,还是sessionStorage,还是token\r\n// 只需要改变这里即可\r\n// 封装:为了统一管理,方便以后的替换和修改\r\nexport const setStorage = (key, value) => {\r\n  localStorage.setItem(key, value)\r\n}\r\n\r\nexport const getStorage = (key) => {\r\n  // 获取时,需要return\r\n  return localStorage.getItem(key)\r\n}\r\n\r\nexport const removeStorage = (key) => {\r\n  localStorage.removeItem(key)\r\n}\r\n\r\n// 左边放大镜的地方,可以把整个项目中用到localStorage的地方全部换掉.\r\n// 专门操作token的localStorage不用换,那是人家自己的\r\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","on","$event","$router","back","directives","name","rawName","inputFn","searchFn","model","value","callback","$$v","kw","trim","expression","length","_l","str","index","key","domProps","_s","lightFn","suggestClickFn","scopedSlots","_u","fn","clearFn","proxy","historyClickFn","_v","staticRenderFns","data","timer","suggestList","history","methods","clearTimeout","keywords","console","moveFn","setTimeout","path","watch","deep","handler","setStorage","component","localStorage","setItem","getStorage","getItem"],"sourceRoot":""}